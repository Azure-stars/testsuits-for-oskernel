PREFIX ?= riscv64-linux-gnu-
CC := $(PREFIX)gcc
HOST := $(patsubst %-gcc,%,$(CC))
STRIP := $(PREFIX)strip
DESTDIR ?= $(shell pwd)/sdcard/riscv/glibc
ARCH ?= riscv64

all: netperf basic busybox lua libc-test iozone unixbench iperf libcbench lmbench_src cyclictest ltp

basic: .PHONY
	make -C basic/user all CHAPTER=7 ARCH=$(ARCH) PREFIX=$(PREFIX)
	mkdir -p $(DESTDIR)/basic
	cp -r basic/user/build/$(ARCH)/* $(DESTDIR)/basic/
	cp scripts/basic/basic_testcode.sh $(DESTDIR)

busybox: .PHONY
	cp config/busybox-config-$(ARCH) busybox/.config
	make -C busybox CC="$(CC) -static" STRIP=$(STRIP) -j
	cp busybox/busybox $(DESTDIR)/
	cp scripts/busybox/* $(DESTDIR)/

lua: .PHONY
	make -C lua CC="$(CC) -static" -j $(NPROC)
	cp lua/src/lua $(DESTDIR)/
	cp scripts/lua/* $(DESTDIR)/

libc-test: .PHONY
	make -C libc-test disk PREFIX=$(PREFIX) -j 1
	cp -r libc-test/disk/* $(DESTDIR)/
	cp libc-test/src/functional/*.so libc-test/src/regression/*.so $(DESTDIR)
	rm $(DESTDIR)/run-all.sh
	cp scripts/libctest/libctest_testcode.sh $(DESTDIR)

iozone: .PHONY
	make -C iozone linux CC=$(CC) -j 
	$(STRIP) iozone/iozone
	cp iozone/iozone $(DESTDIR)/
	cp scripts/iozone/* $(DESTDIR)/

unixbench: .PHONY
	mkdir -p UnixBench/pgms
	make -C UnixBench CC=$(CC) -j $(NPROC) ARCH=$(ARCH) all
	cp UnixBench/pgms/* $(DESTDIR)/
	cp scripts/unixbench/*.sh $(DESTDIR)/

iperf: .PHONY
	cd iperf && ./configure --prefix=$(DESTDIR) --host=$(HOST) --enable-static-bin --without-sctp CC=$(CC)
	make -C iperf CC=$(CC) host=$(HOST) V=1 -j
	cp iperf/src/iperf3 $(DESTDIR)
	cp scripts/iperf/* $(DESTDIR)/
	make -C iperf clean

libcbench: .PHONY
	make -C libc-bench CC=$(CC) -j $(NPROC)
	$(STRIP) libc-bench/libc-bench
	cp libc-bench/libc-bench $(DESTDIR)
	cp scripts/libcbench/* $(DESTDIR)/
	
lmbench_src: .PHONY
	make -C lmbench_src CC=$(CC) -j $(NPROC)
	find lmbench_src/bin/build -type f -executable -exec cp {} ${DESTDIR}/ \;
	sed -i 's|/code/lmbench_src/bin/build/lmbench_all|./lmbench_all|g' ${DESTDIR}/hello
	cp scripts/lmbench/* $(DESTDIR)/

cyclictest:  .PHONY
	make -C rt-tests CROSS_COMPILE=$(PREFIX) HOST=$(HOST) extract_numa
	make -C rt-tests CROSS_COMPILE=$(PREFIX) HOST=$(HOST) cyclictest hackbench
	cp rt-tests/cyclictest rt-tests/hackbench $(DESTDIR)/
	cp scripts/cyclictest/cyclictest_testcode.sh $(DESTDIR)/

ltp: .PHONY
	cd ltp-full-20240524 && ./build-oscomp.sh --prefix $(DESTDIR) --cross $(PREFIX)
	cp scripts/ltp/* $(DESTDIR)/

netperf: .PHONY
	cd netperf && rm -fr netperf-2.7.0 && tar zxf netperf-2.7.0.tar.gz
	cd netperf/netperf-2.7.0 && ./configure --build=$(gcc -dumpmachine) --host=$(HOST) && make -j 8
	cp netperf/netperf-2.7.0/src/netperf ${DESTDIR}/
	cp netperf/netperf-2.7.0/src/netserver ${DESTDIR}/
	cp scripts/netperf/* $(DESTDIR)/
	
clean:
	make -C basic/user clean
	make -C busybox clean
	make -C lua clean
	make -C libc-test clean
	make -C iozone clean
	make -C UnixBench clean
	make -C iperf clean
	make -C libc-bench clean
	make -C lmbench_src clean
	make -C rt-tests clean
	make -C ltp-full-20240524 clean
	rm -fr netperf/netperf-2.7.0

.PHONY: 