NPROC = 16
MUSL_PREFIX = riscv64-linux
MUSL_GCC = $(MUSL_PREFIX)-gcc
MUSL_STRIP = $(MUSL_PREFIX)-strip

RAMDISK = sdcard/riscv

MUSL_LIB?=/opt/riscv64--musl--bleeding-edge-2020.08-1/riscv64-buildroot-linux-musl/sysroot/lib64/


all: basic busybox lua libc-test iozone
	mkdir -p $(RAMDISK)/lib/glibc
	cp -d /usr/riscv64-linux-gnu/lib/*.so* $(RAMDISK)/lib/glibc
	chmod +x $(RAMDISK)/*_testcode.sh


basic: .PHONY
	make -C basic/user all CHAPTER=7
	cp -r basic/user/build/riscv64 $(RAMDISK)/basic/

busybox: .PHONY
	cp config/busybox-config-rv busybox/.config
	make -C busybox CC="$(MUSL_GCC) -static" STRIP=$(MUSL_STRIP) -j$(NPROC)
	$(MUSL_STRIP) busybox/busybox
	cp busybox/busybox $(RAMDISK)/
	cp scripts/busybox/* $(RAMDISK)/

lua: .PHONY
	make -C lua CC="$(MUSL_GCC) -static" -j $(NPROC)
	$(MUSL_STRIP) lua/src/lua
	cp lua/src/lua $(RAMDISK)/
	cp scripts/lua/* $(RAMDISK)/

libc-test: .PHONY
	make -C libc-test disk -j $(NPROC)
	cp -r libc-test/disk/* $(RAMDISK)/
	mkdir -p $(RAMDISK)/lib/musl
	cp libc-test/src/functional/*.so libc-test/src/regression/*.so $(RAMDISK)/lib
	cp $(MUSL_LIB)/libc.so $(RAMDISK)/lib/musl
	rm -f $(RAMDISK)/lib/ld-musl-riscv64-sf.so.1
	ln -s musl/libc.so $(RAMDISK)/lib/ld-musl-riscv64-sf.so.1
	mv $(RAMDISK)/run-all.sh $(RAMDISK)/libctest_testcode.sh

iozone: .PHONY
	make -C iozone linux CC="$(MUSL_GCC) -static" -j $(NPROC)
	$(MUSL_STRIP) iozone/iozone
	cp iozone/iozone $(RAMDISK)/
	cp scripts/iozone/* $(RAMDISK)/

clean:
	make -C basic/user clean
	make -C busybox clean
	make -C lua clean
	make -C libc-test clean
	make -C iozone clean

.PHONY: 