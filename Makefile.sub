PREFIX ?= riscv64-linux-gnu-
CC := $(PREFIX)gcc
HOST := $(patsubst %-gcc,%,$(CC))
STRIP := $(PREFIX)strip
DESTDIR ?= sdcard/riscv/glibc
ABS_DESTDIR := $(shell readlink -f $(DESTDIR))

ifneq (,$(findstring riscv64,$(PREFIX)))
    ARCH := riscv64
else ifneq (,$(findstring loongarch64,$(PREFIX)))
    ARCH := loongarch64
else
    $(error "Unknown ARCH! It should be riscv64 or loongarch64")
endif

all: netperf basic busybox lua libc-test iozone unixbench iperf libcbench lmbench_src cyclictest


basic: .PHONY
	make -C basic/user all CHAPTER=7 ARCH=$(ARCH)
	mkdir -p $(DESTDIR)/basic
	cp -r basic/user/build/$(ARCH)/* $(DESTDIR)/basic/
	cp scripts/basic/basic_testcode.sh $(DESTDIR)

busybox: .PHONY
	cp config/busybox-config-$(ARCH) busybox/.config
	make -C busybox CC="$(CC) -static" STRIP=$(STRIP) -j
	cp busybox/busybox $(DESTDIR)/
	cp scripts/busybox/* $(DESTDIR)/

lua: .PHONY
	make -C lua CC="$(CC) -static" -j $(NPROC)
	cp lua/src/lua $(DESTDIR)/
	cp scripts/lua/* $(DESTDIR)/

libc-test: .PHONY
	make -C libc-test disk PREFIX=$(PREFIX) -j 1
	cp -r libc-test/disk/* $(DESTDIR)/
	mkdir -p $(DESTDIR)/lib/
	cp libc-test/src/functional/*.so libc-test/src/regression/*.so $(DESTDIR)/lib
	rm $(DESTDIR)/run-all.sh
	cp scripts/libctest/libctest_testcode.sh $(DESTDIR)

iozone: .PHONY
	make -C iozone linux CC="$(CC)" -j 
	$(STRIP) iozone/iozone
	cp iozone/iozone $(DESTDIR)/
	cp scripts/iozone/* $(DESTDIR)/

unixbench: .PHONY
	make -C UnixBench CC="$(CC)" -j $(NPROC) ARCH=$(ARCH) all
	cp UnixBench/pgms/* $(DESTDIR)/
	cp scripts/unixbench/*.sh $(DESTDIR)/

iperf: .PHONY
	cd iperf && ./build.sh $(ABS_DESTDIR)
	cp scripts/iperf/* $(DESTDIR)/

libcbench: .PHONY
	make -C libc-bench CC="$(CC)" -j $(NPROC)
	$(STRIP) libc-bench/libc-bench
	cp libc-bench/libc-bench $(DESTDIR)
	cp scripts/libcbench/* $(DESTDIR)/
	
lmbench_src: .PHONY
	make -C lmbench_src CC="$(CC)" -j $(NPROC)
	find lmbench_src/bin/build -type f -executable -exec cp {} ${DESTDIR}/

cyclictest:  .PHONY
	make -C rt-tests-2.7 clean	
	make -C rt-tests-2.7 CROSS_COMPILE=$(PREFIX)
	cp rt-tests-2.7/cyclictest ${DESTDIR}/
	cp rt-tests-2.7/hackbench ${DESTDIR}/

ltp: .PHONY
	cd ltp-full-20240524 && ./build-oscomp.sh $(ABS_DESTDIR)/ltp
	cp scripts/ltp/* $(DESTDIR)/

netperf: .PHONY
	cd netperf && rm -fr netperf-2.7.0 && tar zxf netperf-2.7.0.tar.gz
	cd netperf/netperf-2.7.0 && ./configure --build=$(gcc -dumpmachine) --host=$(HOST) && make -j 8
	cp netperf/netperf-2.7.0/src/netperf ${DESTDIR}/
	cp netperf/netperf-2.7.0/src/netserver ${DESTDIR}/
	
clean:
	make -C basic/user clean
	make -C busybox clean
	make -C lua clean
	make -C libc-test clean
	make -C iozone clean
	make -C UnixBench clean
	make -C iperf clean
	make -C libc-bench clean
	-make -C lmbench_src clean
	make -C rt-tests-2.7 clean
	rm -fr rt-test2-2.7/numactl-2.0.14
	make -C ltp-full-20240524 clean
	rm -fr netperf/netperf-2.7.0

.PHONY: 